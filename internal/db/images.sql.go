// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: images.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createImage = `-- name: CreateImage :one
INSERT INTO images (id, filename, url, size_bytes)
VALUES ($1, $2, $3, $4)
RETURNING id, filename, url, size_bytes, created_at
`

type CreateImageParams struct {
	ID        pgtype.UUID
	Filename  string
	Url       string
	SizeBytes int64
}

func (q *Queries) CreateImage(ctx context.Context, arg CreateImageParams) (Image, error) {
	row := q.db.QueryRow(ctx, createImage,
		arg.ID,
		arg.Filename,
		arg.Url,
		arg.SizeBytes,
	)
	var i Image
	err := row.Scan(
		&i.ID,
		&i.Filename,
		&i.Url,
		&i.SizeBytes,
		&i.CreatedAt,
	)
	return i, err
}

const getImage = `-- name: GetImage :one
SELECT id, filename, url, size_bytes, created_at FROM images WHERE id = $1
`

func (q *Queries) GetImage(ctx context.Context, id pgtype.UUID) (Image, error) {
	row := q.db.QueryRow(ctx, getImage, id)
	var i Image
	err := row.Scan(
		&i.ID,
		&i.Filename,
		&i.Url,
		&i.SizeBytes,
		&i.CreatedAt,
	)
	return i, err
}
