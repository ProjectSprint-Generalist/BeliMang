// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: estimate.sql

package db

import (
	"context"
)

const getMerchantItemPriceByID = `-- name: GetMerchantItemPriceByID :one
SELECT 
  id::text AS id,
  price::int4 AS price
FROM merchant_items
WHERE id = ($1)::text::uuid
`

type GetMerchantItemPriceByIDRow struct {
	ID    string
	Price int32
}

func (q *Queries) GetMerchantItemPriceByID(ctx context.Context, dollar_1 string) (GetMerchantItemPriceByIDRow, error) {
	row := q.db.QueryRow(ctx, getMerchantItemPriceByID, dollar_1)
	var i GetMerchantItemPriceByIDRow
	err := row.Scan(&i.ID, &i.Price)
	return i, err
}

const getMerchantLocationByID = `-- name: GetMerchantLocationByID :one
SELECT 
  id::text AS id,
  ST_Y(location::geometry)::float8 AS lat,
  ST_X(location::geometry)::float8 AS long
FROM merchants
WHERE id = ($1)::text::uuid
`

type GetMerchantLocationByIDRow struct {
	ID   string
	Lat  float64
	Long float64
}

func (q *Queries) GetMerchantLocationByID(ctx context.Context, dollar_1 string) (GetMerchantLocationByIDRow, error) {
	row := q.db.QueryRow(ctx, getMerchantLocationByID, dollar_1)
	var i GetMerchantLocationByIDRow
	err := row.Scan(&i.ID, &i.Lat, &i.Long)
	return i, err
}
